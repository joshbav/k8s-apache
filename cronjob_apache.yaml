# Created 2-21 on K8s 1.20

# A cronjob that runs once a day

# Docs: https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/

# Note, because of K8s cronjob weirdness jobs should be idempotent.
# K8s 1.20 has a new alpha cronjob controller

apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: apache-cronjob
  namespace: apache
  annotations:
spec:
  schedule: "@hourly" #times are based on the timezone of the kube-controller-manager.
  suspend: false # Optional. If true, all subsequent executions are suspended. This setting does not apply to already started executions. Defaults to false. Executions that are suspended during their scheduled time count as missed jobs.
  startingDeadlineSeconds: 100 # Ooptional. It stands for the deadline in seconds for starting the job if it misses its scheduled time for any reason.
  jobTemplate:
    spec:
      concurrencyPolicy: # Default is Allow. Field is also optional, specifies how to treat concurrent executions of a job that is created by this cron job. The spec may specify only one of the following concurrency policies:
      successfulJobsHistoryLimit: # Optional
      failedJobsHistoryLimit: # Optional
      template:
        spec:
          containers:
          - name: apache-cronjob
            image: httpd:2.4.46
            imagePullPolicy: IfNotPresent
            args:
            - /bin/sh
            - -c
            - date; echo I am an example cronjob; sleep 1
            resources:
              requests:
                cpu: 0.1
                ephemeral-storage: 0.5Gi
                memory: 0.1G
              limits:
                cpu: 0.2
                memory: 0.2G
                ephemeral-storage: 2Gi
          restartPolicy: OnFailure

